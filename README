WHAT IS THIS REPO:
The chez fan killer, or Yin fan killer.
This is an extremely boring repo with low code quality (one-time use code) and it wasted me precious time just to mock on human's stupidicity.
The main purpose is to rescue people b????washed (or b???? degraded) by some person whose first name starts with Y.

HOW:
Chez sucks and is usually slower than even LuaJIT.

DO IT YOURSELF:
1) Get your luajit and ????ing chez installed
2) run ./???? and get ????ed. (Only b????less Yin fan get ????ed).

Since this is a ????ing boring repo and life is short I only randomly ported one benchmark (mandelbrot) for now. I'm fair to both. I used the single thread implementation for LuaJIT and I turn on chez's optimization.
Result I get:
25s for LuaJIT
1m19s for chez (or 79s, for people can not do math)

Go try and ???? yourself. Or try un???? by saying chez is not so clever to optimize this code and write some implementation chez like better. Or try un???? by porting some other benchmark. Or go to h???.

Update on Yin fan un????ing attempt:
> Optimize level 3 must be taking too much time! (Author note: Wait, chez is known for fast compilation, even I admit this.. this is fact, 2s bootstrap, and it is completely reasonable to assume compilation time can be ignored in this 1min long test)
> Let's try O1!
But it is hard to explain when your task is to fight against human stupidity. So lets try out optimization level 1.

$ time chez --optimize-level 1 --compile-imported-libraries --program mandelbrot.scm > /dev/null

real	1m27.136s
user	1m25.708s
sys	0m1.304s

oof, you are more ????ed now.

Update 2:
r?????ed Yin fan argues the comparison does not make sense because chez may take too much time to compile.
Ok. Lets do mandelbrot with size 1. The compile time is strictly less than this time.

$ time chez --optimize-level 3 --compile-imported-libraries --program mandelbrot.scm > /dev/null

real	0m0.096s
user	0m0.078s
sys	0m0.016s

Ok. This is an upper bound for your compile time. Feel free to exclude it from previous runtime result.

== inherited from orignal repo ==
binarytrees		ACTIVE
chameneosredux		obsolete,removed
fannkuchredux		ACTIVE
fasta			ACTIVE
fastaredux		obsolete,removed
knucleotide		ACTIVE
mandelbrot		ACTIVE
meteor			obsolete,removed
nbody			ACTIVE
pidigits		ACTIVE
regexdna		obsolete,removed
regexredux		ACTIVE
revcomp			ACTIVE
spectralnorm		ACTIVE
threadring		obsolete,removed
